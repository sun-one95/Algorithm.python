'''
백준 1110

이 문제는 쉬울 줄 알았는데 생각보다 어려웠고 헷갈려서 문제를 푸는데 어려움이 많았다.
정수를 받아서 이 정수가 10보다 크거나 같다면 두자리 수를 더한값의 가장 오른쪽 자리 수를 
새로운 수의 오른쪽 자리 수이고 왼쪽 자리수는 아까 두자리 수 중에 오른쪽에 있는 수가 왼쪽에 위치한다.
그리고 주어진 정수가 만약 10보다 작다면 그 수에 일단 0을 붙여줘서 아까 위의 방법과 동일하게 계산을 한다.
이렇게 계속 계산을 해줘나가면서 원래 수에 도달할 때까지의 사이클 수를 리턴하면 된다.

주어진 n이라는 수를 첫째 자리 둘째 자리를 분리하기 위해 10을 이용했다.
10으로 나눈 몫이 첫째 자리 수이고, 나머지가 둘째 자리 수이기 때문에 이들을 더해서 오른쪽(둘쨰 자리)자리 수를
꺼내야 하기 때문에 위와 같이 10으로 나눈 나머지를 구한다. 그리하여
마지막에는 아까 처음으로 구한 나머지 수에 곱하기 10을 하고 마지막으로 구한 나머지를 더해주면 문제의 법칙을
따르게 된다. 그때마다 카운트는 1씩 더해준다. 사이클로 될때까지
'''

n = int(input())
num = n
cnt = 0 # 사이클수

while True:
    a = num // 10 # 몫
    b = num % 10 # 나머지
    c = (a + b) % 10
    num = (b * 10) + c

    cnt = cnt + 1
    if (num == n):
        break
