'''
1로 만드는 경우의 수중 가장 최솟값을 구하는 문제이기 때문에
거꾸로 문제를 진행하였다. 주어지는 n을 기준으로 식을 짜서 n일 때, 1로 만드는 최소의 경우의 수를 리턴하면 된다.
초기값을 999999로 설정하고 d[n] = 0이라고 설정한다. 왜냐면 n에서 부터 출발하여 1로 가는 경우의 수이기 때문에
촐발점은 0으로 지정한다. 그래서 3, 2로 나누어 떨어지는 경우는 곱하기로 하고, 빼기 1은 더하기로 표현해서 그중 최솟값을 찾아
1을 더해준다. 마지막 더해주는 건 특정 i에서 출발하는 거기 때문에 1을 더해주는 거다.
이렇게 반복문을 돌리면 이제 마지막 1에 도달해서 그 값도 찾게 해준다.
마지막으로 d[1]을 출력하면 끝이다.
'''

import sys

n = int(sys.stdin.readline())
inf = 999999
d = [inf for i in range(5* n + 1)]
d[n] = 0

for i in range(n - 1, 0, -1):
    d[i] = min(d[i*5], d[i*3], d[i*2], d[i+1]) + 1


print(d[1])