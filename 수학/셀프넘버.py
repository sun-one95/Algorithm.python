'''
백준 4673

33 = 33 + 3(십의자리) + 3(일의자리) = 39
33은 39의 생성자
생서자가 없는 숫자를 셀프넘버
셀프넘버를 출력해야 한다.(10000보다 작거나 같은)

나는 처음에 이 문제를 풀때, 등차수열이라던지 똑같은 숫자를 더해가는 규칙이 있다고
판단해서 그런식으로 로직을 짜서 제출을 했는데, 틀렸다.
아무래도 10000보다 작은 숫자가 예시에서는 너무 많아서 생략이 되었는데,
아무래도 생략된 숫자들이 내가 만든 규칙에 맞지 않았나 보다

풀이는 되게 간단했다.
1부터 10000까지의 숫자를 집합에 저장하고
하나하나를 꺼내서 위의 규치대로 더해준다. 그러면 이 만들어진 숫자는 셀프넘버가 아니기 대문에ㅔ
제거해줄 리스트에 추가해준다.

그런다음, 원래 만든 집합에서 셀프넘버가 아닌 숫자들을 넣어준 집합을 빼주면 된다.
나온 차집합을 반복문을 돌려서 하나씩 정렬되게 출력한다.
'''

numbers = set(range(1, 10000))
remove_set = set() # 생성자가 있는 숫자 set
for num in numbers:
    for n in str(num):
        num += int(n)
    remove_set.add(num) # add: 집합에 요소를 추가할 때

self_numbers = numbers - remove_set # set의 '_' 연산자로 차집합을 구함
for self_num in sorted(self_numbers): # sorted 함수로 정렬
    print(self_num)
